# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  imageRepo: javasampleapp
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    - task: Docker@2
      displayName: Build an image
      inputs:
        containerRegistry: 'ACRConnection'
        repository: '$(imageRepo)'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: |
          $(tag)
          latest
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/s/Deployment.yaml'
        artifact: 'manifest'
        publishLocation: 'pipeline'


- stage: Deploy
  displayName: Deploy to DEV
  dependsOn: Build
  variables:
    acrsecrect: k8sexampleacrauth
  jobs:
  - job: AKS
    displayName: Deploy to AKS
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'manifest'
        targetPath: '$(Pipeline.Workspace)/manifest'
    - task: KubernetesManifest@0
      inputs:
          action: 'createSecret'
          kubernetesServiceConnection: 'kubernetes_Connections'
          namespace: 'default'
          secretType: 'dockerRegistry'
          secretName: '$(acrsecrect)'
          dockerRegistryEndpoint: 'ACRConnection'
    - task: KubernetesManifest@0
      inputs:
        action: 'deploy'
        kubernetesServiceConnection: 'kubernetes_Connections'
        namespace: 'default'
        manifests: '$(Pipeline.Workspace)/manifest/Deployment.yaml'
